[workspace]
members = [
    "attestation_agent/agent",
    "attestation_agent/agent_restful",
    "attestation_agent/challenge",
    "attestation_agent/config",
    "attestation_agent/utils",
    "attestation_agent/attester/tpm/ima",
    "attestation_agent/attester/tpm/boot",
    "attestation_agent/attester/tpm/dim",
    "attestation_server/policy",
    "attestation_server/ref_value",
    "attestation_server/endorserment",
    "attestation_server/api",
    "attestation_server/nonce",
    "attestation_server/token",
    "attestation_server/policy_engine",
    "attestation_server/key",
    "attestation_server/attestation",
    "attestation_server/server_config",
    "attestation_server/resource_provider",
    "attestation_server/verifier/tpm/boot",
    "attestation_server/verifier/tpm/ima",
    "attestation_server/verifier/tpm/dim",
    "attestation_common/cache",
    "attestation_common/config_manager",
    "attestation_common/distributed_lock",
    "attestation_common/env_config_parse",
    "attestation_common/mq",
    "attestation_common/rdb",
    "attestation_common/schedule_job",
    "attestation_common/ratelimit",
    "attestation_common/common_log",
    "attestation_common/jwt",
    "plugin_manager",
    "attestation_cli",
    "key_manager",
]

resolver = "2"

[workspace.dependencies]
log = "0.4"
env_logger = "0.11.6"
actix-web = "4.0"
sea-orm = { version = "1.1.12", features = ["sqlx-postgres", "sqlx-mysql", "sqlx-sqlite", "runtime-tokio-native-tls", "debug-print", "mock"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = { version = "1.0", features = ["preserve_order"] }
serde_yaml = "0.9"
dotenv = "0.15"
redis = { version = "0.23.0", features = ["async-std-comp", "tokio-comp", "connection-manager"] }
tokio = { version = "1", features = ["full"] }
thiserror = "2.0.12"
once_cell = "1.19.0"
async-trait = "0.1.77"
log4rs = { version = "1.2.0", features = ["gzip"] }
lazy_static = "1.5.0"
chrono = "0.4"
parking_lot = "0.12.3"
cron = "0.15.0"
awc = "3.5.1"
openssl = { version = "0.10.45" }
anyhow = "1.0"
ctor = "0.4.0"
libsm = "0.6.0"
encoding = "0.2.33"
futures = "0.3.31"
plugin_manager = { path = "./plugin_manager" }
attestation = { path = "attestation_server/attestation" }
key_management = { path = "attestation_server/key" }
nonce = { path = "attestation_server/nonce" }
policy = { path = "attestation_server/policy" }
endorserment = { path = "attestation_server/endorserment" }
rv = { path = "attestation_server/ref_value" }
resource_provider = {path = "attestation_server/resource_provider" }
policy_engine = { path = "attestation_server/policy_engine" }
rand = "0.8.4"
rand_chacha = "0.3.1"
base64 = "0.22.1"
regex = "1.9.1"
regorus = "0.2.8"
mockall = "0.10.1"
fmt = "0.8"
token_management = { path = "attestation_server/token" }
jsonwebtoken = "9"
uuid = { version = "1.13.1", features = ["v4", "v5"] }
libloading = "0.8.6"
tempfile = "3.19.0"
serial_test = "3.2.0"
walkdir = "2.5.0"
governor = "0.6.0"
hex = "0.4.3"
rdkafka = { version = "0.37.0", features = ["dynamic-linking"] }
reqwest = { version = "0.11"}
tss-esapi = { version = "7.6.0", features = ["generate-bindings"] }
validator = { version = "0.20.0", features = ["derive"]}
byteorder = "1.4"
cache = { path = "attestation_common/cache" }
config_manager = { path = "attestation_common/config_manager" }
distributed_lock = {path = "attestation_common/distributed_lock"}
env_config_parse = {path = "attestation_common/env_config_parse"}
mq = {path = "attestation_common/mq"}
rdb = {path = "attestation_common/rdb"}
jwt = {path = "attestation_common/jwt"}
schedule_job = {path = "attestation_common/schedule_job"}
ratelimit = {path = "attestation_common/ratelimit"}
common_log = {path = "attestation_common/common_log"}
server_config = {path = "attestation_server/server_config" }
scopeguard = "1.2.0"
clap = { version = "4.5.32", features = ["derive"] }